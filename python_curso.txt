OPERADORES DE COMPARACION
Generalmente son booleanos, es decir que el resultado puede ser mayor o no.
    Ejemplo:
    - Mayor o menor
             print(7 > 9) False
             print(7 < 9) True
    - Mayor o igual
             print(2 >= 1) True
             print(5 <= 3) False
    - Igual
             print(6 == 6) True
             print(6 == 2) False
    - Diferente
             print(6 != 1) True
             print(6 != 6) False

Los operadores de comparacion pueden utilizarse tambien para str, sin importar si son comillas dobles o simples, pero es Key Sensitive.
    Ejemplo: print("Apple" == 'Apple') True
             print("Apple" == 'apple') False

COMPARACION DE NUMEROS FLOTANTES
si comparamos 2 numeros flotantes como 3.3 y (1.1 + 2.2), el resultado seria el mismo pero nos daria False. Para realizar una conversion en la cual nos diera true, debemos hacerlo con la propiedad tolerance:
    Ejemplo: x = 3.3
             y = 1.1 + 2.2
             print(x == y) False
             ("x" seria 3.3 e "y" seria 3.3000000000000003)

    Entonces:
             tolerance = 0.00001
             print(abs(x - y) < tolerance) True
             NOTA: abs significa valor absoluto

Una opcion mas facil, es utilizar la propiedad round seguido del numero de decimales.
    Ejemplo: y = 3.300000000001
             print(round(y,1))
    Nos daria como resultado 3.3


OPERADORES LOGICOS: AND, OR y NOT
Se utilizan para evaluar ciertas condiciones.

- AND se utiliza para comparar y los elementos deben cumplir una condicion:
    ejemplo:
            print("true and true =>", True and True) Seria True
            print("true and False =>", True and false) Seria False
            print("false and true =>", False and True) Seria False
            print("False and false =>", False and False) Seria False
            print(10 > 5 and 5 < 10) nos daria True
            print(10 > 5 and 5 > 10) nos daria False


        NOTA: Solo es verdadero cuando todas las condiciones se cumplen.


- OR se utiliza para comparar y al menos uno de los elementos se debe cumplir.
    Ejemplo:
            print("true or true =>", True or True) Seria True
            print("true or False =>", True or false) Seria True
            print("false or true =>", False or True) Seria True
            print("False or false =>", False or False) Seria False

            role = input("Ingrese su rol: ")
            print(role == "admin" or role == "sysadmin")
            cualquier otra cosa que no sea admin o sysadmin daria False.
        NOTA: Solo es False cuando ninguna condicion se cumple.

- NOT se utiliza para invertir o negar y cambiar una condicion booleana.
    Ejemplo:
            stock = int(input("Por favor, ingrese un numero entre 100 y 105:"))
            print(not(stock >= 100 and stock <= 105)) deberia dar True si ingresamos cualquier numero entre 100 y 105, pero dara False


CONDICIONALES
- if siempre es booleano.
    Ejemplo:
            pet = input("Cual es tu mascota favorita? ")
            if pet == "perro":
                print("Mejor cambiate a los gatos!")

            if pet != "perro":
                print("Acaricia a la Perlita!")
- Else acompaÃ±a al if. Si if no se cumple, entra en el Else.
    Ejemplo:
            pet = input("Cual es tu mascota favorita? ")
            if pet == "Gato":
                print("La mejor eleccion!")

            else:
                print("Deberias pasarte a los gatos, gato!")

- elif se usa para entrar en un bloque si una condicion no se cumple y vaya a evluar a otra.
    Ejemplo:
            pet = input("Cual es tu mascota favorita? ")

            if pet == "Perro":
                print("Deberias ir a buscar al Lobeshno")
            elif pet == ("Gato"):
                print("Deberias buscar a la Perlita")
            else:
                print("Sos una verga!")

